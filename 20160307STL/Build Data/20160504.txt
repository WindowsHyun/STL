
---------------------------------------
2016년 1학기 STL
Wed May  4 11:00:11 2016
---------------------------------------

//---------------------------------------------------------------------------
// 2016년 05월 04일 (9주 1일)
//
// 알고리즘 조작(269)
// 알고리즘과 멤버함수 비교
// 알고리즘 인자로서의 함수
// 람다 사용하기
// 함수객체
// 선정의 함수객체와 바인더
//---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <list>
#include "save.h"

using namespace std;

int main() {
	vector<int> v{ 1, 2, 3, 4, 5, 6 };

	auto db = remove_if(v.begin(), v.end(), [](int n) {
		if ((n % 2) == 0)
			return true;
		return false;
	});
	v.erase(db, v.end());

	for (int d : v)
		cout << d << " ";
	cout << endl;

	//문제 v에서 짝수를 지워주세요
	// 짝수라는 조건을 찾아 지워야하므로 알고리즘함수 remove_if

	save();
}
---------------------------------------
2016년 1학기 STL
Wed May  4 11:13:28 2016
---------------------------------------

//---------------------------------------------------------------------------
// 2016년 05월 04일 (9주 1일)
//
// 알고리즘 조작(269)
// 알고리즘과 멤버함수 비교
// 알고리즘 인자로서의 함수
// 람다 사용하기
// 함수객체
// 선정의 함수객체와 바인더
//---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <list>
#include "save.h"

using namespace std;

int main() {
	list<int> coll{ 1, 2, 3, 4, 5, 6 };

	/*auto db = remove_if(coll.begin(), coll.end(), [](int n) {
		if (n & 1)
			return false;
		return true;
	});
	coll.erase(db, coll.end());
	성능이 나쁘므로 list는 자체적인 함수를 사용한다.
	*/

	coll.remove_if([](int n) {
		if (n % 2)
			return false;
		return true;
	});

	for (auto d : coll)
		cout << d << " ";
	cout << endl;

	save();
}
---------------------------------------
2016년 1학기 STL
Wed May  4 11:40:08 2016
---------------------------------------

//---------------------------------------------------------------------------
// 2016년 05월 04일 (9주 1일)
//
// 알고리즘 조작(269)
// 알고리즘과 멤버함수 비교
// 알고리즘 인자로서의 함수
// 람다 사용하기
// 함수객체
// 선정의 함수객체와 바인더
//---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <list>
#include "save.h"

using namespace std;
// 알고리즘 인자로서의 함수(276) - 호출할 수 있는 것이라면 뭐든지 가능
void print(int n) {
	cout << n;
}
template<class iter, class Call>
void foreach(iter a, iter b, Call f) {
	while (a != b) {
		f(*a++);
	}
}

int main() {
	list<int> coll{ 1, 2, 3, 4, 5, 6 };
	/*
	for_each(coll.begin(), coll.end(), [](int n) {
		cout << n;
	});
	// 둘다 같은 내용이다.
	for_each(coll.begin(), coll.end(), print);
	*/
	foreach(coll.begin(), coll.end(), print);
	save();
}
---------------------------------------
2016년 1학기 STL
Wed May  4 11:52:01 2016
---------------------------------------

//---------------------------------------------------------------------------
// 2016년 05월 04일 (9주 1일)
//
// 알고리즘 조작(269)
// 알고리즘과 멤버함수 비교
// 알고리즘 인자로서의 함수
// 람다 사용하기
// 함수객체
// 선정의 함수객체와 바인더
//---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
#include <iterator>
#include <list>
#include "save.h"

using namespace std;
// 알고리즘 인자로서의 함수(276) - 호출할 수 있는 것이라면 뭐든지 가능
void print(int n) {
	cout << n;
}
template<class iter, class Call>
void foreach(iter a, iter b, Call f) {
	while (a != b) {
		f(*a++);
	}
}

int main() {
	vector<int> v{ 1, 2, 3, 4, 5, 6 };
	list<int> c{ 1, 2, 3, 4, 5, 6 };

	// v*c의 결과를 화면에 출력하시오.
	// 함수 하나만 사용할 것. -> transform()

	transform(v.begin(), v.end(), c.begin(), ostream_iterator<int>(cout, " "), [](int a, int b) {
		return a*b;
	});

	save();
}
---------------------------------------
2016년 1학기 STL
Wed May  4 12:12:10 2016
---------------------------------------

//---------------------------------------------------------------------------
// 2016년 05월 04일 (9주 1일)
//
// 알고리즘 조작(269)
// 알고리즘과 멤버함수 비교
// 알고리즘 인자로서의 함수
// 람다 사용하기
// 함수객체
// 선정의 함수객체와 바인더
//---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <set>
#include "save.h"

using namespace std;

class Game {
	int n{ 0 };
public:
	Game(int n) : n{ n } {}
	bool operator<(const Game & g) const {
		return n < g.n;
	}
	operator int() const { return n; };
};

int main() {
	set<Game> s{ 1, 3, 5, 2, 4, 6 };

	for (Game d : s)
		cout << d << " ";
	cout << endl;
	save();
}
---------------------------------------
2016년 1학기 STL
Wed May  4 12:15:04 2016
---------------------------------------

//---------------------------------------------------------------------------
// 2016년 05월 04일 (9주 1일)
//
// 알고리즘 조작(269)
// 알고리즘과 멤버함수 비교
// 알고리즘 인자로서의 함수
// 람다 사용하기
// 함수객체
// 선정의 함수객체와 바인더
//---------------------------------------------------------------------------
#include <iostream>
#include <string>
#include <set>
#include "save.h"

using namespace std;

class Game {
	int n{ 0 };
public:
	Game(int n) : n{ n } {}
	/*bool operator<(const Game & g) const {
		return n < g.n;
	}*/
	friend bool operator<(const Game& a, const Game & g);
	operator int() const { return n; };
};

bool operator<(const Game& a, const Game & g) {
	return a.n < g.n;
}

int main() {
	set<Game> s{ 1, 3, 5, 2, 4, 6 };

	for (Game d : s)
		cout << d << " ";
	cout << endl;
	save();
}